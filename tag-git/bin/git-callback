#!/usr/bin/ruby

def log(msg)
  msg = "[git-callback] #{msg}"
  puts "\e[35m#{msg}\e[0m"
end

def install_ruby
  return unless File.exist?('.ruby-version')

  ruby_version = `cat .ruby-version`.strip
  version_already_installed = system 'ruby --version >/dev/null'

  return if version_already_installed

  log "Installing missing ruby version '#{ruby_version}'"
  system "asdf install ruby #{ruby_version}"

  log "Installling gems 'bundler' and 'rails'"
  system 'gem install bundler rails'

  log "Running 'bundle install'"
  system 'bundle check >/dev/null || bundle'
end

def install_nodejs
  return unless File.exist?('.nvmrc')

  node_version = `cat .nvmrc`.strip
  version_already_installed = system 'node --version >/dev/null'

  return if version_already_installed

  log "Installing missing nodejs version '#{node_version}'"
  system "asdf install nodejs #{node_version}"
end

def install_packages
  changed_files = `git diff-tree --no-commit-id --name-only HEAD@{1} HEAD`.split

  if changed_files.include? "package.json"
    log "package.json changed, running 'npm install && npm prune'"
    system "npm install >/dev/null 2>&1 && npm prune >/dev/null 2>&1"
  end

  if changed_files.include? "Gemfile.lock"
    log "Gemfile.lock changed, running bundler"
    system "bundle check >/dev/null || bundle"
  end
end

def run_ctags
  git_directory = `git rev-parse --git-dir`.chomp
  tags_file_path = "#{git_directory}/tags"

  # Remove the previous `.git/tags` file
  system "rm -f #{tags_file_path}"

  # Generate a new `.git/tags` file
  system "git ls-files | ctags --tag-relative -L - -f'#{tags_file_path}'"

  log "Updated ctags index"
end

install_ruby
install_nodejs
install_packages
run_ctags
